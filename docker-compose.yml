version: '3'

volumes:
  sdb:

networks:
  internal:

services:
#  sdb:
#    image: mariadb
#    command: --max-allowed-packet=64MB
#    restart: always
#    volumes:
#      - sdb:/var/lib/mysql
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_DATABASE=${MYSQL_DB_APP}
#      - MYSQL_HOST=${MYSQL_HOST_APP}
#      - MYSQL_PORT=${MYSQL_PORT_APP}
#    env_file:
#      - .env
#    expose:
#      - ${MYSQL_PORT_APP}
#    networks:
#      internal:
#        aliases:
#          - sdb
#
#  sdb-test:
#    image: mariadb
#    command: --max-allowed-packet=64MB
#    restart: always
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_DATABASE=${MYSQL_DB_TEST}
#      - MYSQL_HOST=${MYSQL_HOST_TEST}
#      - MYSQL_PORT=${MYSQL_PORT_TEST}
#    env_file:
#      - .env
#    expose:
#      - ${MYSQL_PORT_TEST}
#    networks:
#      internal:
#        aliases:
#          - sdb-test

  sdb:
    image: postgres:13-alpine
    networks:
      internal:
    env_file:
      - .env
    expose:
      - 5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB_APP}
    volumes:
      - sdb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "POSTGRES_PASSWORD=${POSTGRES_PASSWORD} pg_isready -U ${POSTGRES_USER} -h localhost -d ${POSTGRES_DB_APP}"]
      interval: 30s
      timeout: 5s
      retries: 3


  spotlight:
    build:
      context: spotlight
      args:
        RAILS_ENV: ${RAILS_ENV}
    command: bash -c "/bin/docker-entrypoint.sh"
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=spotlight.docker
      - VIRTUAL_PORT=3000
    networks:
      internal:
    depends_on:
      - sdb
    expose:
      - 3005



